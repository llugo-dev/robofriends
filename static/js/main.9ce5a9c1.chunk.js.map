{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","className","alt","src","id","name","email","DisplayCards","robots","map","user","index","Scroll","style","children","SearchBox","searchChange","type","placeholder","onChange","e","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","searchfield","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCOCQ,EAZF,SAACC,GACV,OACI,sBAAKC,UAAU,+CAAf,UACI,qBAAKC,IAAI,oBAAoBC,IAAG,+BAA0BH,EAAMI,GAAhC,cAChC,gCACI,6BAAKJ,EAAMK,OACX,4BAAIL,EAAMM,eCgBXC,EArBM,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEpB,OAAOA,EAAOC,KAAI,SAACC,EAAMC,GACrB,OACI,cAAC,EAAD,CAAkBP,GAAII,EAAOG,GAAOP,GAAIC,KAAMG,EAAOG,GAAON,KAAMC,MAAOE,EAAOG,GAAOL,OAA5EK,OCGRC,EARA,SAACZ,GACZ,OACI,qBAAKa,MAAO,CAAC,SAAY,SAAU,OAAU,kBAAmB,OAAU,SAA1E,SACKb,EAAMc,YCQJC,EAXG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKf,UAAU,MAAf,SACI,uBAAOgB,KAAK,SACZC,YAAY,gBACZjB,UAAU,oCACVkB,SAAU,SAAAC,GAAC,OAAIJ,EAAaI,SCczBC,G,wDAnBX,WAAYrB,GAAQ,IAAD,8BACf,cAAMA,IACDsB,MAAQ,CACTC,UAAU,GAHC,E,wDAOnB,SAAqBC,EAAOC,GACxBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,+DAEJG,KAAK1B,MAAMc,a,GAhBCc,cC0CZC,E,kDAnCX,WAAY7B,GAAQ,IAAD,8BACf,cAAMA,IAaV8B,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAC,YAAeI,EAAMC,OAAOC,SAb3C,EAAKX,MAAQ,CACTd,OAAQ,GACR0B,YAAa,IAJF,E,qDAQnB,WAAqB,IAAD,OAChBC,MAAM,8CACG1C,MAAK,SAAA2C,GAAQ,OAAIA,EAASC,UAC1B5C,MAAK,SAAA6C,GAAK,OAAI,EAAKX,SAAS,CAACnB,OAAQ8B,S,oBAOlD,WACI,MAA8BZ,KAAKJ,MAA5Bd,EAAP,EAAOA,OAAQ0B,EAAf,EAAeA,YACTK,EAAiB/B,EAAOgC,QAAO,SAAAC,GAAK,OAAIA,EAAMpC,KAAKqC,cAAcC,SAAST,EAAYQ,kBAC5F,OAAsC,IAA7BhB,KAAKJ,MAAMd,OAAOoC,OAAgB,oBAAI3C,UAAU,QAAd,qBACnC,sBAAKA,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWe,aAAcU,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAActB,OAAQ+B,e,GA5BhCX,aCDlBiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B3D,M","file":"static/js/main.9ce5a9c1.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow shadow-5'>\r\n            <img alt='Robot of Jane Doe' src={`https://robohash.org/${props.id}?200x200`}/>\r\n            <div>\r\n                <h2>{props.name}</h2>\r\n                <p>{props.email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst DisplayCards = ({ robots }) => {\r\n    /* const robots = props.robots; */\r\n    return robots.map((user, index) => {\r\n        return (\r\n            <Card key={index} id={robots[index].id} name={robots[index].name} email={robots[index].email}/>\r\n        );\r\n    });\r\n};\r\n\r\n/* class CardList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.robots = props.robots;\r\n    }\r\n    render() {\r\n        return this.robots.map((user, index) => {\r\n            return (<Card key={index} id={user.id} name={user.name} email={user.email}/>);\r\n        });\r\n    }\r\n} */\r\n\r\nexport default DisplayCards;\r\n\r\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{'overflow': 'scroll', 'border': '5px solid black', 'height': '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input type=\"search\" \r\n            placeholder=\"Search Robots\" \r\n            className='pa3 ba b--green bg-light-blue br3'\r\n            onChange={e => searchChange(e)}></input>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        };\r\n    }\r\n\r\n    didComponentHasError(error, info) {\r\n        this.setState({hasError: true});\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Oooooops. This is not good...</h1>;\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport DisplayCards from '../components/CardList';\r\nimport Scroll from '../components/Scroll.js';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n                .then(response => response.json())\r\n                .then(users => this.setState({robots: users}));\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({'searchfield': event.target.value});\r\n    }\r\n\r\n    render() {\r\n        const {robots, searchfield} = this.state;\r\n        const filteredRobots = robots.filter(robot => robot.name.toLowerCase().includes(searchfield.toLowerCase()));\r\n        return ((this.state.robots.length === 0) ? <h1 className=\"f2 tc\">LOADING</h1> : (\r\n                <div className='tc'>\r\n                    <h1 className=\"f2\">Robofriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <ErrorBoundry>\r\n                            <DisplayCards robots={filteredRobots}/>\r\n                        </ErrorBoundry>\r\n                    </Scroll>                   \r\n                </div>\r\n            ));          \r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\nimport App from './containers/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}